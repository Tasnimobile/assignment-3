{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","_Component","_inherits","_super","_createSuper","_classCallCheck","this","apply","arguments","_createClass","key","value","React","createElement","props","accountBalance","toFixed","Component","Home","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","_this","call","handleChange","e","updatedUser","_objectSpread","state","user","target","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credit","creditsView","credits","map","cred","date","slice","id","amount","description","updatedCredit","Date","toISOString","addCredits","credit","placeholder","style","width","required","pattern","title","Debits","debits","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_e$target","_defineProperty","debit","newDebit","length","parseFloat","addDebit","htmlFor","App","logInInfo","newUser","currentUser","info","_toConsumableArray","creditList","newCreditSubmission","push","newBalance","Number","console","log","prevState","debitList","concat","_this2","fetch","then","response","json","data","totalCredits","reduce","total","catch","error","totalDebits","_this3","Router","basename","Route","exact","path","render","Credits","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82eb848f.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Account Balance: ${this.props.accountBalance.toFixed(2)}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from \"react\";\nimport AccountBalance from './AccountBalance';\nimport { Link } from \"react-router-dom\";\nclass Credit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      credit: {\n        id: \"\",\n        amount: 0.0,\n        description: \"\",\n        date: \"\",\n      },\n    };\n  }\n  // Create the list of Credit items\n  creditsView = () => {\n    const { credits } = this.props;\n    return credits.map((cred) => {\n      // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = cred.date.slice(0, 10);\n      return (\n        <li key={cred.id}>\n          {cred.amount} {cred.description} {date}\n        </li>\n      );\n    });\n  };\n  // When new debit input, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedCredit = { ...this.state.credits }; // Create an object for state\n    updatedCredit[e.target.name] = e.target.value;\n    updatedCredit[\"date\"] = new Date().toISOString(); // add the new submission\n    this.setState({ credits: updatedCredit }); // Update state with object values\n  };\n\n  // When user clicked submit button, store debit data\n  handleSubmit = (e) => {\n    e.preventDefault(); // set submission date to current date\n    this.props.addCredits(this.state.credits); // Update state in the top-level component (App.js)\n  };\n  render() {\n    return (\n      <div>\n        <h1>Credits</h1>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n        <br/>\n        {this.creditsView()}\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            style={{ width: \"350px\" }}\n            onChange={this.handleChange}\n            required\n          />\n          <br />\n          <input\n            type=\"any\"\n            pattern=\"^\\d+(\\.\\d{1,2})?$\"\n            name=\"amount\"\n            placeholder=\"Amount in $\"\n            title=\"Please enter the $ amount up to two decimal places.\"\n            onChange={this.handleChange}\n            required\n          />\n          <button type=\"submit\">Add Credit</button>\n        </form>\n        <br />\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\nexport default Credit;\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Debits = (props) => {\n  const { debits, accountBalance } = props;\n  const [formData, setFormData] = useState({ description: '', amount: '' });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { description, amount } = formData;\n    if (description && amount) {\n      const newDebit = {\n        id: debits.length + 1, // Generate a unique ID (assuming IDs are sequential integers)\n        description,\n        amount: parseFloat(amount),\n        date: new Date().toISOString().slice(0, 10), // Current date in YYYY-MM-DD format\n      };\n\n      // Call the addDebit function passed as a prop from app.js to update the debits array\n      props.addDebit(newDebit);\n\n      // Clear the form fields after adding the new debit\n      setFormData({ description: '', amount: '' });\n    }\n  };\n\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>({debit.id}) {debit.amount.toFixed(2)} {debit.description} {date} </li>\n    });\n  }\n\n  return (\n    <div>\n      <h1>Debits</h1>\n      {debitsView()}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"description\">Description: </label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          required\n        />\n        <br/>\n        <label htmlFor=\"description\">Amount: </label>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={formData.amount}\n          onChange={handleChange}\n          required\n        />\n        <br/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br />\n      <br />\n      <p>Account Balance: ${accountBalance.toFixed(2)}</p>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  componentDidMount() {\n    // Fetch credits data\n    fetch('https://johnnylaicode.github.io/api/credits.json')\n      .then(response => response.json())\n      .then(data => {\n        const totalCredits = data.reduce((total, credit) => total + credit.amount, 0);\n        this.setState({ creditList: data, accountBalance: totalCredits });\n      })\n      .catch(error => {\n        console.error('Error fetching credits data:', error);\n      });\n\n    // Fetch debits data\n    fetch('https://johnnylaicode.github.io/api/debits.json')\n      .then(response => response.json())\n      .then(data => {\n        const totalDebits = data.reduce((total, debit) => total + debit.amount, 0);\n        this.setState({ debitList: data, accountBalance: this.state.accountBalance - totalDebits });\n      })\n      .catch(error => {\n        console.error('Error fetching debits data:', error);\n      });\n  }\n\n  addCredits = (info) => {\n    let credits = [...this.state.creditList];\n    let newCreditSubmission = {\n      amount: info.amount,\n      description: info.description,\n      date: info.date,\n    };\n    credits.push(newCreditSubmission);\n    let newBalance = Number(this.state.accountBalance) + Number(info.amount);\n    this.setState({ creditList: credits, accountBalance: newBalance });\n    console.log(credits);\n  };\n\n  // Function to add debit\n  addDebit = (debit) => {\n    this.setState(prevState => ({\n      debitList: [...prevState.debitList, debit],\n      accountBalance: prevState.accountBalance - debit.amount\n    }));\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredits={this.addCredits} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","React","createElement","this","props","accountBalance","Home","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credit","creditsView","credits","map","cred","date","slice","key","id","amount","description","updatedCredit","credit","Date","toISOString","addCredits","style","backgroundColor","padding","placeholder","width","required","pattern","title","Debits","debits","formData","setFormData","useState","debitsView","debit","toFixed","newDebit","length","parseFloat","addDebit","htmlFor","App","info","creditList","newCreditSubmission","push","newBalance","Number","console","log","prevState","debitList","logInInfo","newUser","currentUser","componentDidMount","fetch","then","response","json","data","totalCredits","reduce","total","catch","error","totalDebits","Router","basename","minHeight","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","Credits","DebitsComponent","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b83747.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from \"react\";\nimport AccountBalance from './AccountBalance';\nimport { Link } from \"react-router-dom\";\n\nclass Credit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      credit: {\n        id: \"\",\n        amount: 0.0,\n        description: \"\",\n        date: \"\",\n      },\n    };\n  }\n\n  // Create the list of Credit items\n  creditsView = () => {\n    const { credits } = this.props;\n    return credits.map((cred) => {\n      // Extract properties for display\n      let date = cred.date.slice(0, 10);\n      return (\n        <li key={cred.id}>\n          {cred.amount} {cred.description} {date}\n        </li>\n      );\n    });\n  };\n  \n\n  // Handle input changes and update state\n  handleChange = (e) => {\n    const updatedCredit = { ...this.state.credit }; // Copy state object\n    updatedCredit[e.target.name] = e.target.value;\n    updatedCredit[\"date\"] = new Date().toISOString(); // Set the current date\n    this.setState({ credit: updatedCredit }); // Update state\n  };\n\n  // Handle form submission\n  handleSubmit = (e) => {\n    e.preventDefault(); // Prevent form submission\n    this.props.addCredits(this.state.credit); // Call function passed from App.js\n  };\n\n  render() {\n    return (\n      <div style={{ backgroundColor: '#f0f8ff', padding: '10px' }}>\n        <h1>Credits</h1>\n        <AccountBalance accountBalance={this.props.accountBalance} />\n        <br />\n        {this.creditsView()}\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            style={{ width: \"350px\" }}\n            onChange={this.handleChange}\n            required\n          />\n          <br />\n          <input\n            type=\"number\"\n            pattern=\"^\\d+(\\.\\d{1,2})?$\"\n            name=\"amount\"\n            placeholder=\"Amount in $\"\n            title=\"Please enter the $ amount up to two decimal places.\"\n            onChange={this.handleChange}\n            required\n          />\n          <button type=\"submit\">Add Credit</button>\n        </form>\n        <br />\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default Credit;\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Debits = (props) => {\n  const { debits, accountBalance } = props;\n  const [formData, setFormData] = useState({ description: '', amount: '' });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { description, amount } = formData;\n    if (description && amount) {\n      const newDebit = {\n        id: debits.length + 1, // Generate a unique ID (assuming IDs are sequential integers)\n        description,\n        amount: parseFloat(amount),\n        date: new Date().toISOString().slice(0, 10), // Current date in YYYY-MM-DD format\n      };\n\n      // Call the addDebit function passed as a prop from app.js to update the debits array\n      props.addDebit(newDebit);\n\n      // Clear the form fields after adding the new debit\n      setFormData({ description: '', amount: '' });\n    }\n  };\n\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>({debit.id}) {debit.amount.toFixed(2)} {debit.description} {date} </li>\n    });\n  }\n\n  return (\n    <div style={{ backgroundColor: '#f0f8ff', padding: '10px' }}>\n      <h1>Debits</h1>\n      {debitsView()}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"description\">Description: </label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          required\n        />\n        <br/>\n        <label htmlFor=\"description\">Amount: </label>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={formData.amount}\n          onChange={handleChange}\n          required\n        />\n        <br/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br />\n      <br />\n      <p>Account Balance: ${accountBalance.toFixed(2)}</p>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  componentDidMount() {\n    //Fetches the credits data\n    fetch('https://johnnylaicode.github.io/api/credits.json')\n      .then(response => response.json())\n      .then(data => {\n        const totalCredits = data.reduce((total, credit) => total + credit.amount, 0);\n        this.setState({ creditList: data, accountBalance: totalCredits });\n      })\n      .catch(error => {\n        console.error('Error fetching credits data:', error);\n      });\n\n      //Fetches the debits data\n    fetch('https://johnnylaicode.github.io/api/debits.json')\n    .then(response => response.json())\n    .then(data => {\n      const totalDebits = data.reduce((total, debit) => total + debit.amount, 0);\n      this.setState({ debitList: data, accountBalance: this.state.accountBalance - totalDebits });\n    })\n    .catch(error => {\n      console.error('cant fetch debit data:', error);\n    });\n\n    }\n\n    addCredits = (info) => {\n      let credits = [...this.state.creditList];\n      let newCreditSubmission = {\n        amount: info.amount,\n        description: info.description,\n        date: info.date,\n      };\n      credits.push(newCreditSubmission);\n      let newBalance = Number(this.state.accountBalance) + Number(info.amount);\n      this.setState({ creditList: credits, accountBalance: newBalance });\n      console.log(credits);\n    };\n    \n    addDebit = (debit) => {\n      this.setState(prevState => ({\n        debitList: [...prevState.debitList, debit],\n        accountBalance: prevState.accountBalance - debit.amount\n      }));\n    };\n\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredits={this.addCredits} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-starter-code\">\n        <div style={{ backgroundColor: '#f0f8ff', minHeight: '100vh', padding: '10px' }}>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n    \n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}